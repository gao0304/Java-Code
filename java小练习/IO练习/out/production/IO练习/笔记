输入流：
节点流（4种方法）
1.可以从文件中读
2.可以从网络中读（网卡/TCP连接）
3.可以从内存中读（将内存中的一段空间当成输入源）
4.可以从标准输入中读

处理流/过滤流（4种方法）
1. 直接通过字节方式读，然后程序进行字符编码(buffer 大小 < 数据长度/精确控制字符都比较麻烦)
2. 把 Stream 转化为 Reader，进行字符形式读取
     2.1 直接读
     2.2 BufferedReader      readLine
3. Scanner 也可以

节点流可以和处理流进行排列组合

标准输入：
     EOS:End Of Stream
     EOF:End Of File
     EOL:End Of Line

输出流：标准输出/标准错误

网络基本原理：
   协议：
   应用层   进程
   传输层   TCP/UDP协议  TCP分用的依据是端口
   网络层
   数据链路层
   物理层
应用层数据发送时   从上往下  是封装的过程
应用层数据接收时   从下往上  是解包加分用（数据交付上一层的意思）的过程
复习：
IP是网络层的地址，标识网络上的唯一主机；port是标识主机上的唯一进程
当说到主机（Host）的时候（我们这里就不去严格区分这里是域名还是IP了），因为DNS服务器可以将域名转换为对应的IP
TCP：面向流、可靠的、面向连接
  如何知道TCP一次发送的数据到达了结尾：
    1.读到EOS（也就是End Of Stream）
    2.读到一个特殊的字符(事先约定好)
    3.先给固定的字节，表示以后会发送的长度大小（事先约定好）

我们这里学习的IO是BIO（block IO），以后会学到NIO（异步IO）不会造成阻塞